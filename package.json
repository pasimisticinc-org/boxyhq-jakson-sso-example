{
  "name": "jackson",
  "version": "1.21.7",
  "private": true,
  "description": "SAML 2.0 service",
  "keywords": [
    "SAML 2.0"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/boxyhq/jackson.git"
  },
  "license": "Apache-2.0",
  "scripts": {
    "dev": "cross-env JACKSON_API_KEYS=secret IDP_ENABLED=true next dev -p 5225",
    "dev-dbs": "docker-compose -f ./_dev/docker-compose.yml up -d",
    "dev-dbs-destroy": "docker-compose -f ./_dev/docker-compose.yml down --volumes --remove-orphans",
    "mongo": "cross-env JACKSON_API_KEYS=secret DB_ENGINE=mongo DB_URL=mongodb://localhost:27017/jackson npm run dev",
    "pre-loaded": "cross-env JACKSON_API_KEYS=secret DB_ENGINE=mem PRE_LOADED_CONNECTION='./_dev/saml_config' npm run dev",
    "pre-loaded-db": "cross-env JACKSON_API_KEYS=secret PRE_LOADED_CONNECTION='./_dev/saml_config' npm run dev",
    "sort": "npx sort-package-json",
    "postgres": "cross-env JACKSON_API_KEYS=secret DB_ENGINE=sql DB_TYPE=postgres DB_URL=postgres://postgres:postgres@localhost:5432/postgres npm run dev",
    "mysql": "cross-env JACKSON_API_KEYS=secret DB_ENGINE=sql DB_TYPE=mysql DB_URL=mysql://root:mysql@localhost:3307/mysql npm run dev",
    "planetscale": "cross-env JACKSON_API_KEYS=secret DB_SSL=true DB_ENGINE=planetscale DB_URL=${PLANETSCALE_URL} npm run dev",
    "mariadb": "cross-env JACKSON_API_KEYS=secret DB_ENGINE=sql DB_TYPE=mariadb DB_URL=mariadb://root@localhost:3306/mysql npm run dev",
    "mssql": "cross-env JACKSON_API_KEYS=secret DB_ENGINE=sql DB_TYPE=mssql DB_URL='sqlserver://localhost:1433;database=master;username=sa;password=123ABabc!' npm run dev",
    "dynamodb": "cross-env JACKSON_API_KEYS=secret DB_ENGINE=dynamodb DB_URL='http://localhost:8000' npm run dev",
    "postgres:skaffold": "skaffold dev -f skaffold-postgres.yaml --status-check=false --force=true",
    "mongo:skaffold": "skaffold dev -f skaffold-mongo.yaml --status-check=false --force=true",
    "mysql:skaffold": "skaffold dev -f skaffold-mysql.yaml --status-check=false --force=true",
    "mariadb:skaffold": "skaffold dev -f skaffold-mariadb.yaml --status-check=false --force=true",
    "mssql:skaffold": "skaffold dev -f skaffold-mssql.yaml --status-check=false --force=true",
    "dynamodb:skaffold": "skaffold dev -f skaffold-dynamodb.yaml --status-check=false --force=true",
    "demo:skaffold": "echo 'This is only meant for BoxyHQ internal use. Please use {dbname}:skaffold instead' && skaffold run -f skaffold-demo.yaml --status-check=false",
    "demo-services:skaffold": "echo 'This is only meant for BoxyHQ internal use. Please use {dbname}:skaffold instead' && skaffold run -f skaffold-demo-services.yaml --status-check=false",
    "demo-mocksaml:skaffold": "echo 'This is only meant for BoxyHQ internal use. Please use {dbname}:skaffold instead' && skaffold run -f skaffold-demo-mocksaml.yaml --status-check=false",
    "demo-mocksaml-services:skaffold": "echo 'This is only meant for BoxyHQ internal use. Please use {dbname}:skaffold instead' && skaffold run -f skaffold-demo-mocksaml-services.yaml --status-check=false",
    "prod-eu:skaffold": "echo 'This is only meant for BoxyHQ internal use. Please use {dbname}:skaffold instead' && skaffold run -f skaffold-prod-eu.yaml --status-check=false",
    "prod-eu-services:skaffold": "echo 'This is only meant for BoxyHQ internal use. Please use {dbname}:skaffold instead' && skaffold run -f skaffold-prod-eu-services.yaml --status-check=false",
    "prod-eu-mocksaml:skaffold": "echo 'This is only meant for BoxyHQ internal use. Please use {dbname}:skaffold instead' && skaffold run -f skaffold-prod-eu-mocksaml.yaml --status-check=false",
    "prod-eu-mocksaml-services:skaffold": "echo 'This is only meant for BoxyHQ internal use. Please use {dbname}:skaffold instead' && skaffold run -f skaffold-prod-eu-mocksaml-services.yaml --status-check=false",
    "start": "cross-env PORT=5225 NODE_OPTIONS=--dns-result-order=ipv4first node .next/standalone/server.js",
    "swagger-jsdoc": "swagger-jsdoc -d swagger/swagger-definition.js npm/src/**/*.ts npm/src/**/**/*.ts -o swagger/swagger.json",
    "redis": "cross-env JACKSON_API_KEYS=secret DB_ENGINE=redis DB_TYPE=redis DB_URL=redis://localhost:6379/redis npm run dev",
    "prepare": "npm run prepare:npm && npm run prepare:internal-ui",
    "prepare:npm": "cd npm && npm install --legacy-peer-deps",
    "prepare:internal-ui": "cd internal-ui && npm install --legacy-peer-deps",
    "pretest:e2e": "env-cmd -f .env.test.local ts-node --logError e2e/support/pretest.ts",
    "test:e2e": "env-cmd -f .env.test.local playwright test",
    "test": "cd npm && npm run test",
    "postinstall": "npm run prebuild",
    "prebuild": "ts-node --logError prebuild.ts",
    "build": "next build",
    "postbuild": "ts-node --logError postbuild.ts",
    "release": "git checkout main && git pull && git checkout release && git merge origin/main && release-it && git checkout main && git merge origin/release && git push origin main",
    "check-types": "tsc --pretty --noEmit",
    "check-format": "prettier --check .",
    "check-lint": "next lint && eslint -c .eslintrc.js --ext ts --ext tsx --ext js ./",
    "check-unused": "npx knip",
    "check-locale": "node check-locale.js",
    "format": "prettier --write ."
  },
  "dependencies": {
    "@boxyhq/internal-ui": "file:internal-ui",
    "@boxyhq/metrics": "0.2.6",
    "@boxyhq/react-ui": "3.3.42",
    "@boxyhq/saml-jackson": "file:npm",
    "@heroicons/react": "2.1.3",
    "@retracedhq/logs-viewer": "2.7.1",
    "@retracedhq/retraced": "0.7.8",
    "@tailwindcss/typography": "0.5.12",
    "axios": "1.6.8",
    "blockly": "10.4.3",
    "chroma-js": "2.4.2",
    "classnames": "2.5.1",
    "cors": "2.8.5",
    "daisyui": "4.9.0",
    "formik": "2.4.5",
    "i18next": "23.10.1",
    "medium-zoom": "1.1.0",
    "micromatch": "4.0.5",
    "next": "14.1.4",
    "next-auth": "4.24.7",
    "next-i18next": "15.2.0",
    "next-mdx-remote": "4.4.1",
    "nodemailer": "6.9.13",
    "raw-body": "2.5.2",
    "react": "18.2.0",
    "react-daisyui": "5.0.0",
    "react-dom": "18.2.0",
    "react-i18next": "14.1.0",
    "react-syntax-highlighter": "15.5.0",
    "react-tagsinput": "3.20.3",
    "remark-gfm": "3.0.1",
    "sharp": "0.33.3",
    "swr": "2.2.5"
  },
  "devDependencies": {
    "@playwright/test": "1.42.1",
    "@types/cors": "2.8.17",
    "@types/micromatch": "4.0.6",
    "@types/node": "20.11.30",
    "@types/react": "18.2.67",
    "@typescript-eslint/eslint-plugin": "7.3.1",
    "@typescript-eslint/parser": "7.3.1",
    "autoprefixer": "10.4.19",
    "cross-env": "7.0.3",
    "env-cmd": "10.1.0",
    "eslint": "8.57.0",
    "eslint-config-next": "14.1.4",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-i18next": "6.0.3",
    "jose": "5.2.3",
    "postcss": "8.4.38",
    "prettier": "3.2.5",
    "prettier-plugin-tailwindcss": "0.5.13",
    "release-it": "17.1.1",
    "swagger-jsdoc": "6.2.8",
    "tailwindcss": "3.4.3",
    "ts-node": "10.9.2",
    "tsconfig-paths": "4.2.0",
    "typescript": "5.4.2"
  },
  "engines": {
    "node": ">=18.14.2",
    "npm": ">=8"
  }
}
